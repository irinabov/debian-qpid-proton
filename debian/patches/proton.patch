From 669bd39f15e0d6daf9beaec3f70d59b7cb8cdba2 Mon Sep 17 00:00:00 2001
From: Kim van der Riet <kvdr@localhost.localdomain>
Date: Tue, 10 Dec 2019 10:56:30 -0500
Subject: [PATCH 2/4] Changed Sphinx invocation from sphinx to sphinx-build for
 RHEL7

---
 python/CMakeLists.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/python/CMakeLists.txt b/python/CMakeLists.txt
index 87057d8..9176ba5 100644
--- a/python/CMakeLists.txt
+++ b/python/CMakeLists.txt
@@ -127,7 +127,7 @@ else ()
         COMMAND ${PN_ENV_SCRIPT} --
         PYTHONPATH=${CMAKE_CURRENT_BINARY_DIR}:${CMAKE_CURRENT_SOURCE_DIR}
         LD_LIBRARY_PATH="${CMAKE_CURRENT_BINARY_DIR}/c"
-        ${PYTHON_EXECUTABLE} -m sphinx "${CMAKE_CURRENT_SOURCE_DIR}/docs" "${CMAKE_CURRENT_BINARY_DIR}/docs")
+        sphinx-build "${CMAKE_CURRENT_SOURCE_DIR}/docs" "${CMAKE_CURRENT_BINARY_DIR}/docs")
     add_dependencies(docs docs-py)
     install(DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/docs/"
             DESTINATION "${PROTON_SHARE}/docs/api-py"
-- 
1.8.3.1

From 4829ff36a427c13e25fce017d353ed7cb17644ff Mon Sep 17 00:00:00 2001
From: Andrew Stitcher <astitcher@apache.org>
Date: Fri, 22 May 2020 03:10:54 -0400
Subject: [PATCH 3/4] PROTON-2228: pn_listener_close doesn't correctly close
 the listener fds

---
 c/src/proactor/epoll.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/c/src/proactor/epoll.c b/c/src/proactor/epoll.c
index 6ae9660..20376e4 100644
--- a/c/src/proactor/epoll.c
+++ b/c/src/proactor/epoll.c
@@ -1779,9 +1779,9 @@ static void listener_begin_close(pn_listener_t* l) {
         if (a->armed) {
           shutdown(ps->epoll_io.fd, SHUT_RD);  // Force epoll event and callback
         } else {
+          int fd = ps->epoll_io.fd;
           stop_polling(&ps->epoll_io, ps->proactor->epollfd);
-          close(ps->epoll_io.fd);
-          ps->epoll_io.fd = -1;
+          close(fd);
           l->active_count--;
         }
       }
@@ -1864,9 +1864,9 @@ static pn_event_batch_t *listener_process(pn_listener_t *l, int n_events, bool w
         ps->working_io_events = 0;
         if (l->context.closing) {
           l->acceptors[i].armed = false;
+          int fd = ps->epoll_io.fd;
           stop_polling(&ps->epoll_io, ps->proactor->epollfd);
-          close(ps->epoll_io.fd);
-          ps->epoll_io.fd = -1;
+          close(fd);
           l->active_count--;
         } else {
           l->acceptors[i].armed = false;
-- 
1.8.3.1

From a49b728fb652fd9ec864e1abd1183a78dd96e0e9 Mon Sep 17 00:00:00 2001
From: Irina Boverman <iboverma@redhat.com>
Date: Fri, 29 May 2020 14:17:27 -0400
Subject: [PATCH 4/4] Temporary patch to enable installed examples to build

---
 c/examples/CMakeLists.txt   | 22 ----------------------
 cpp/examples/CMakeLists.txt | 31 -------------------------------
 2 files changed, 53 deletions(-)

diff --git a/c/examples/CMakeLists.txt b/c/examples/CMakeLists.txt
index 9771ec5..1f448e9 100644
--- a/c/examples/CMakeLists.txt
+++ b/c/examples/CMakeLists.txt
@@ -32,25 +32,3 @@ foreach (name broker send receive direct send-abort send-ssl)
   set_target_properties(c-${name} PROPERTIES
     OUTPUT_NAME ${name})
 endforeach()
-
-
-find_package (PythonInterp)     # For test-driver script
-if (PYTHON_EXECUTABLE)
-  if(WIN32)
-    # NOTE: need to escape semicolons as cmake uses them as list separators.
-    set(test_path "$<TARGET_FILE_DIR:c-broker>\;$<TARGET_FILE_DIR:qpid-proton-core>\;$<TARGET_FILE_DIR:qpid-proton-proactor>")
-  else()
-    set(test_path "$<TARGET_FILE_DIR:c-broker>:$ENV{PATH}")
-  endif()
-
-  set(test_env
-    "PATH=${test_path}"
-    "PYTHONPATH=../../tests/py")
-
-  pn_add_test(
-    UNWRAPPED
-    NAME c-example-tests
-    PREPEND_ENVIRONMENT "${test_env}"
-    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-    COMMAND ${PYTHON_EXECUTABLE} testme -v)
-endif()
diff --git a/cpp/examples/CMakeLists.txt b/cpp/examples/CMakeLists.txt
index 4c6dc9f..74e41de 100644
--- a/cpp/examples/CMakeLists.txt
+++ b/cpp/examples/CMakeLists.txt
@@ -102,34 +102,3 @@ if(HAS_ENOUGH_CPP11)
     endforeach()
   endif()
 endif()
-
-find_package (PythonInterp)     # For test-driver script
-if (PYTHON_EXECUTABLE)
-  if(WIN32)
-    # NOTE: need to escape semicolons as cmake uses them as list separators.
-    set(test_path "$<TARGET_FILE_DIR:broker>\;$<TARGET_FILE_DIR:qpid-proton-core>\;$<TARGET_FILE_DIR:qpid-proton-cpp>")
-  else()
-    set(test_path "$<TARGET_FILE_DIR:broker>:$ENV{PATH}")
-  endif()
-
-  set(test_env
-    "PATH=${test_path}"
-    "PYTHONPATH=../../tests/py"
-    "HAS_CPP11=$<$<BOOL:${HAS_ENOUGH_CPP11}>:1>")
-
-  pn_add_test(
-    UNWRAPPED
-    NAME cpp-example-container
-    PREPEND_ENVIRONMENT "${test_env}"
-    WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-    COMMAND ${PYTHON_EXECUTABLE} testme -v ContainerExampleTest)
-
-  if (NOT SSL_IMPL STREQUAL none)
-    pn_add_test(
-      UNWRAPPED
-      NAME cpp-example-container-ssl
-      PREPEND_ENVIRONMENT "${test_env}"
-      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
-      COMMAND ${PYTHON_EXECUTABLE} testme -v ContainerExampleSSLTest)
-  endif()
-endif()
-- 
1.8.3.1

